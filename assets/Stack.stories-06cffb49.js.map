{"version":3,"file":"Stack.stories-06cffb49.js","sources":["../../src/components/Stack/Stack.tsx"],"sourcesContent":["import { Children as ReactChildren, ComponentProps, Fragment, useEffect, useState } from 'react';\nimport { forwardRef } from 'react';\n\nimport { Box } from '~/components/Box/Box';\nimport { Children } from '~/utils/typing/children';\n\nexport type StackProps = Omit<ComponentProps<typeof Box>, 'size'> & {\n  /**\n   * The children to render inside the stack. Stack will not accept only 1 child, it must have at least 2. If you need to place only 1 child please prefer using Box.\n   * @default []\n   * @type {Children[]}\n   */\n  children: Children[];\n  /**\n   * Whether the stack should use as divider between children.\n   * @default undefined\n   * @type {Children}\n   * @example\n   * <Stack divider={<div className=\"divider\"/>}>\n   *  <span>First</span>\n   *  <span>Second</span>\n   * </Stack>\n   */\n  divider?: Children;\n} & (\n    | {\n        /**\n         * Gap between children. If a divider is used, the gap will be divided by 2 and applied to the before and adfter the divider.\n         * Whenever a gap is defined fluid must be undefined.\n         * @default 0\n         * @type {number}\n         * @example\n         * <Stack gap={16}>\n         *  <span>First</span>\n         *  <span>Second</span>\n         * </Stack>\n         * @example\n         * <Stack gap={16} divider={<div className=\"divider\"/>}>\n         *  <span>First</span>\n         *  <span>Second</span>\n         * </Stack>\n         */\n        gap: number;\n        fluid?: never;\n      }\n    | {\n        /**\n         * Whether the stack should take the full width or height of its parent.\n         * If a divider is used, it will be placed in the middle of this space.\n         * Whenever fluid is defined gap must be undefined.\n         * @default false\n         * @type {boolean}\n         * @example\n         * <Stack fluid>\n         *  <span>First</span>\n         *  <span>Second</span>\n         * </Stack>\n         * @example\n         * <Stack fluid divider={<div className=\"divider\"/>}>\n         *  <span>First</span>\n         *  <span>Second</span>\n         * </Stack>\n         */\n        fluid: boolean;\n        gap?: never;\n      }\n  );\n\nexport const Stack = forwardRef<HTMLElement, StackProps>((props, ref) => {\n  const { children, fluid, gap, divider, ...boxProps } = props;\n  const [content, setChildren] = useState<Children[]>(children.filter(child => !!child));\n\n  useEffect(() => {\n    setChildren(children.filter(child => !!child));\n  }, [children]);\n\n  const commonProps = {\n    ...boxProps,\n    ref: ref,\n    height: fluid && boxProps.column ? '100%' : props.height,\n    width: fluid && !boxProps.column ? '100%' : props.width,\n    'data-test-id': props['data-test-id'],\n  };\n\n  if (!divider) {\n    return (\n      <Box\n        {...commonProps}\n        style={{\n          gap: gap,\n          justifyContent: fluid ? 'space-between' : undefined,\n          ...boxProps.style,\n          ...props.style,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  } else {\n    return (\n      <Box\n        {...commonProps}\n        style={{\n          gap: gap ? gap * 0.5 : undefined,\n          justifyContent: fluid ? 'space-between' : undefined,\n          ...boxProps.style,\n          ...props.style,\n        }}\n      >\n        {content.map((child, index) => (\n          <Fragment key={index}>\n            {child}\n            {index < content.length - 1 && divider}\n          </Fragment>\n        ))}\n      </Box>\n    );\n  }\n});\n"],"names":["Stack","forwardRef","props","ref","children","fluid","gap","divider","boxProps","content","setChildren","useState","child","useEffect","commonProps","jsx","Box","index","jsxs","Fragment"],"mappings":"wOAoEO,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,IAAAC,EAAA,QAAAC,EAAA,GAAAC,CAAA,EAAAN,EACA,CAAAO,EAAAC,CAAA,EAAAC,WAAAP,EAAA,OAAAQ,GAAA,CAAA,CAAAA,CAAA,CAAA,EAEAC,EAAAA,UAAA,IAAA,CACEH,EAAAN,EAAA,OAAAQ,GAAA,CAAA,CAAAA,CAAA,CAAA,CAA6C,EAAA,CAAAR,CAAA,CAAA,EAG/C,MAAAU,EAAA,CAAoB,GAAAN,EACf,IAAAL,EACH,OAAAE,GAAAG,EAAA,OAAA,OAAAN,EAAA,OACkD,MAAAG,GAAA,CAAAG,EAAA,OAAA,OAAAN,EAAA,MACA,eAAAA,EAAA,cAAA,CACd,EAGtC,OAAAK,EAeEQ,EAAA,IACEC,EAAC,CAAA,GAAAF,EACK,MAAA,CACG,IAAAR,EAAAA,EAAA,GAAA,OACkB,eAAAD,EAAA,gBAAA,OACmB,GAAAG,EAAA,MAC9B,GAAAN,EAAA,KACH,EACX,SAAAO,EAAA,IAAA,CAAAG,EAAAK,IAAAC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAIKP,EAAAK,EAAAR,EAAA,OAAA,GAAAF,CAC8B,CAAA,EAAAU,CAAA,CAAA,CAElC,CAAA,EA7BLF,EAAA,IACEC,EAAC,CAAA,GAAAF,EACK,MAAA,CACG,IAAAR,EACL,eAAAD,EAAA,gBAAA,OAC0C,GAAAG,EAAA,MAC9B,GAAAN,EAAA,KACH,EACX,SAAAO,CAEC,CAAA,CAuBT,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}