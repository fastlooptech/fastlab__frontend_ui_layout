{"version":3,"file":"Box-da55b798.js","sources":["../../src/components/Box/Box.tsx"],"sourcesContent":["import { createElement, CSSProperties, forwardRef, useCallback, useEffect, useMemo } from 'react';\nimport { logger } from '~/utils/logger';\nimport { BoxProps, BoxPropsOverride } from './BoxTyping';\n\nfunction some(array: any[], predicate: (v: any) => boolean): boolean {\n  return array.filter(predicate).length > 0;\n}\n\nexport const Box = forwardRef<HTMLElement, BoxProps>((props, ref) => {\n  const logWarnings = useCallback((): void => {\n    if (props.basis === 'auto') {\n      logger.warn('basis is \"auto\" by default: forcing it to \"auto\"  will leave \"shrink:true\" as default');\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof props.children !== 'undefined' &&\n      !props.column &&\n      props.hAlignContent === 'center'\n    ) {\n      const atLeastOneChildHasHMarginAuto = some([].concat(props.children as any), (child: any) => {\n        const props = (typeof child === 'object' && child !== null ? child.props : undefined) || {};\n        const style = props.style || {};\n\n        const marginLeft = style.marginLeft || props.marginLeft;\n        const marginRight = style.marginRight || props.marginRight;\n        return marginLeft === 'auto' && marginRight === 'auto';\n      });\n\n      atLeastOneChildHasHMarginAuto &&\n        logger.warn(\n          'In a row with hAlignContent=\"center\" there should be no child with marginLeft and marginRight set to \"auto\"\\nhttps://github.com/buildo/react-flexview/issues/30'\n        );\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof props.children !== 'undefined' &&\n      props.column &&\n      props.vAlignContent === 'center'\n    ) {\n      const atLeastOneChildHasVMarginAuto = some([].concat(props.children as any), (child: any) => {\n        const props = (typeof child === 'object' && child !== null ? child.props : undefined) || {};\n        const style = props.style || {};\n\n        const marginTop = style.marginTop || props.marginTop;\n        const marginBottom = style.marginBottom || props.marginBottom;\n        return marginTop === 'auto' && marginBottom === 'auto';\n      });\n\n      atLeastOneChildHasVMarginAuto &&\n        logger.warn(\n          'In a column with vAlignContent=\"center\" there should be no child with marginTop and marginBottom set to \"auto\"'\n        );\n    }\n  }, [props]);\n\n  useEffect(() => {\n    logWarnings();\n  }, [props]);\n\n  const grow = useMemo(() => {\n    if (typeof props.grow === 'number') {\n      return props.grow;\n    } else if (props.grow) {\n      return 1;\n    }\n    return 0; // default\n  }, [props.grow]);\n\n  const shrink = useMemo(() => {\n    if (typeof props.shrink === 'number') {\n      return props.shrink;\n    } else if (props.shrink) {\n      return 1;\n    } else if (props.shrink === false) {\n      return 0;\n    }\n\n    if (props.basis && props.basis !== 'auto') {\n      return 0;\n    }\n\n    return 1; // default\n  }, [props.shrink, props.basis]);\n\n  const alignPropToFlex = useCallback((align: BoxProps['vAlignContent'] | BoxProps['hAlignContent']) => {\n    switch (align) {\n      case 'top':\n      case 'left':\n        return 'flex-start';\n      case 'center':\n        return 'center';\n      case 'bottom':\n      case 'right':\n        return 'flex-end';\n    }\n  }, []);\n\n  const basis: string = useMemo(() => {\n    if (props.basis) {\n      const basisAsString = String(props.basis);\n      const isBasisANumber = typeof props.basis === 'number';\n      const isBasisANumberString = String(parseInt(basisAsString, 10)) === basisAsString;\n      const suffix = isBasisANumber || isBasisANumberString ? 'px' : '';\n      return basisAsString + suffix;\n    } else return 'auto'; // default\n  }, [props.basis]);\n\n  const style: CSSProperties = useMemo(() => {\n    const size = {\n      width: props.width,\n      height: props.height,\n      marginLeft: props.marginLeft,\n      marginTop: props.marginTop,\n      marginRight: props.marginRight,\n      marginBottom: props.marginBottom,\n    };\n\n    return {\n      boxSizing: 'border-box',\n\n      // some browsers don't set these by default on flex\n      minWidth: 0,\n      minHeight: 0,\n\n      // flex properties\n      display: 'flex',\n      flexDirection: props.column ? 'column' : 'row',\n      flexWrap: props.wrap ? 'wrap' : 'nowrap',\n      flex: `${grow} ${shrink} ${basis}`,\n      justifyContent: alignPropToFlex(props.column ? props.vAlignContent : props.hAlignContent),\n      alignItems: alignPropToFlex(props.column ? props.hAlignContent : props.vAlignContent),\n      cursor: props.onClick ? 'pointer' : undefined,\n\n      // style passed through props\n      ...size,\n      ...props.style,\n    };\n  }, [\n    props.column,\n    props.wrap,\n    props.vAlignContent,\n    props.hAlignContent,\n    props.width,\n    props.height,\n    props.marginLeft,\n    props.marginTop,\n    props.marginRight,\n    props.marginBottom,\n    props.grow,\n    props.shrink,\n    props.basis,\n    props.style,\n  ]);\n\n  const HTMLElementProps = useMemo((): BoxProps & { [k in keyof BoxPropsOverride]?: never } => {\n    const {\n      children,\n      className,\n      style,\n      column,\n      grow,\n      shrink,\n      basis,\n      wrap,\n      vAlignContent,\n      hAlignContent,\n      width,\n      height,\n      marginBottom,\n      marginTop,\n      marginLeft,\n      marginRight,\n      component,\n      'data-test-id': dataTestId,\n      ...rest\n    } = props;\n\n    return rest;\n  }, [props]);\n\n  return createElement(props.component || 'div', {\n    ref,\n    className: props.className,\n    children: props.children,\n    style,\n    autoComplete: props.component === 'form' && !props.autoComplete ? 'off' : props.autoComplete,\n    'data-test-id': props['data-test-id'],\n    ...HTMLElementProps,\n  });\n});\n"],"names":["Box","forwardRef","props","ref","logWarnings","useCallback","useEffect","grow","useMemo","shrink","alignPropToFlex","align","basis","basisAsString","isBasisANumber","isBasisANumberString","style","size","HTMLElementProps","children","className","style2","column","grow2","shrink2","basis2","wrap","vAlignContent","hAlignContent","width","height","marginBottom","marginTop","marginLeft","marginRight","component","dataTestId","rest","createElement"],"mappings":"wCAQO,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,MAAAC,EAAAC,EAAAA,YAAA,IAAA,CACEH,EAAA,KA4CA,EAAA,CAAAA,CAAA,CAAA,EAGFI,EAAAA,UAAA,IAAA,CACEF,GAAY,EAAA,CAAAF,CAAA,CAAA,EAGd,MAAAK,EAAAC,EAAAA,QAAA,IACE,OAAAN,EAAA,MAAA,SACEA,EAAA,KAAaA,EAAA,KAEb,EAEF,EAAO,CAAAA,EAAA,IAAA,CAAA,EAGTO,EAAAD,EAAAA,QAAA,IACE,OAAAN,EAAA,QAAA,SACEA,EAAA,OAAaA,EAAA,OAEb,EAAOA,EAAA,SAAA,IAKTA,EAAA,OAAAA,EAAA,QAAA,OACE,EAGF,EAAO,CAAAA,EAAA,OAAAA,EAAA,KAAA,CAAA,EAGTQ,EAAAL,cAAAM,GAAA,CACE,OAAAA,EAAA,CAAe,IAAA,MACR,IAAA,OAEH,MAAA,aAAO,IAAA,SAEP,MAAA,SAAO,IAAA,SACJ,IAAA,QAEH,MAAA,UAAO,CACX,EAAA,CAAA,CAAA,EAGFC,EAAAJ,EAAAA,QAAA,IAAA,CACE,GAAAN,EAAA,MAAA,CACE,MAAAW,EAAA,OAAAX,EAAA,KAAA,EACAY,EAAA,OAAAZ,EAAA,OAAA,SACAa,EAAA,OAAA,SAAAF,EAAA,EAAA,CAAA,IAAAA,EAEA,OAAAA,GADAC,GAAAC,EAAA,KAAA,GACuB,KAClB,OAAA,MAAO,EAAA,CAAAb,EAAA,KAAA,CAAA,EAGhBc,EAAAR,EAAAA,QAAA,IAAA,CACE,MAAAS,EAAA,CAAa,MAAAf,EAAA,MACE,OAAAA,EAAA,OACC,WAAAA,EAAA,WACI,UAAAA,EAAA,UACD,YAAAA,EAAA,YACE,aAAAA,EAAA,YACC,EAGtB,MAAA,CAAO,UAAA,aACM,SAAA,EAGD,UAAA,EACC,QAAA,OAGF,cAAAA,EAAA,OAAA,SAAA,MACgC,SAAAA,EAAA,KAAA,OAAA,SACT,KAAA,GAAAK,KAAAE,KAAAG,IACL,eAAAF,EAAAR,EAAA,OAAAA,EAAA,cAAAA,EAAA,aAAA,EAC6D,WAAAQ,EAAAR,EAAA,OAAAA,EAAA,cAAAA,EAAA,aAAA,EACJ,OAAAA,EAAA,QAAA,UAAA,OAChD,GAAAe,EAGjC,GAAAf,EAAA,KACM,CACX,EAAA,CACCA,EAAA,OACKA,EAAA,KACAA,EAAA,cACAA,EAAA,cACAA,EAAA,MACAA,EAAA,OACAA,EAAA,WACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,KACAA,EAAA,OACAA,EAAA,MACAA,EAAA,KACA,CAAA,EAGRgB,EAAAV,EAAAA,QAAA,IAAA,CACE,KAAA,CAAM,SAAAW,EACJ,UAAAC,EACA,MAAAC,EACA,OAAAC,EACA,KAAAC,EACA,OAAAC,EACA,MAAAC,EACA,KAAAC,EACA,cAAAC,EACA,cAAAC,EACA,MAAAC,EACA,OAAAC,EACA,aAAAC,EACA,UAAAC,EACA,WAAAC,EACA,YAAAC,EACA,UAAAC,EACA,eAAAC,EACgB,GAAAC,CACb,EAAAnC,EAGL,OAAAmC,CAAO,EAAA,CAAAnC,CAAA,CAAA,EAGT,OAAAoC,gBAAApC,EAAA,WAAA,MAAA,CAA+C,IAAAC,EAC7C,UAAAD,EAAA,UACiB,SAAAA,EAAA,SACD,MAAAc,EAChB,aAAAd,EAAA,YAAA,QAAA,CAAAA,EAAA,aAAA,MAAAA,EAAA,aACgF,eAAAA,EAAA,cAAA,EAC5C,GAAAgB,CACjC,CAAA,CAEP,CAAA"}