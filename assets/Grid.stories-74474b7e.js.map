{"version":3,"file":"Grid.stories-74474b7e.js","sources":["../../src/components/Grid/Grid.tsx"],"sourcesContent":["import { Children as ReactChildren, CSSProperties, Fragment, useEffect, useMemo } from 'react';\nimport { forwardRef } from 'react';\nimport { Children } from '~/utils/typing/children';\n\nexport type ContainerProps = {\n  'data-test-id'?: string;\n  rows: number;\n  cols: number;\n  rowsGap?: number;\n  colsGap?: number;\n  className?: string;\n  style?: CSSProperties;\n  children: Children | Children[];\n};\n\nconst Container = forwardRef<HTMLDivElement, ContainerProps>((props, ref) => {\n  const errorMessage = 'invalid child type, all children should be <Grid.Item />';\n\n  useEffect(() => {\n    if (Array.isArray(props.children)) {\n      const check = props.children.every((child: any) => child?.type?.render?.displayName == 'Grid.Item');\n      if (!check) console.warn(errorMessage);\n    }\n  }, [props.children]);\n\n  const cssStyle: CSSProperties = useMemo(\n    () => ({\n      display: 'grid',\n      gridTemplateColumns: `repeat(${props.cols}, 1fr)`,\n      gridTemplateRows: `repeat(${props.rows}, 1fr)`,\n      columnGap: props.colsGap || 0,\n      rowGap: props.rowsGap || 0,\n      ...props.style,\n    }),\n    [props.rows, props.rowsGap, props.cols, props.colsGap, props.style]\n  );\n\n  return (\n    <div ref={ref} style={cssStyle} data-test-id={props['data-test-id']} className={props.className}>\n      {ReactChildren.map(props.children, (item, index) => (\n        <Fragment key={index}>{item}</Fragment>\n      ))}\n    </div>\n  );\n});\n\nexport type ItemProps = {\n  'data-test-id'?: string;\n  children: Children;\n  colStart?: number;\n  colEnd?: number;\n  rowStart?: number;\n  rowEnd?: number;\n  justifySelf?: 'start' | 'end' | 'center' | 'stretch';\n  alignSelf?: 'start' | 'end' | 'center' | 'stretch';\n  className?: string;\n  style?: CSSProperties;\n};\n\nconst Item = forwardRef<HTMLDivElement, ItemProps>((props, ref) => {\n  const cssStyle: CSSProperties = useMemo(\n    () => ({\n      gridColumnStart: props.colStart,\n      gridColumnEnd: props.colEnd,\n      gridRowStart: props.rowStart,\n      gridRowEnd: props.rowEnd,\n      justifySelf: props.justifySelf,\n      alignSelf: props.alignSelf,\n      ...props.style,\n    }),\n    [props.colStart, props.colEnd, props.rowStart, props.rowEnd, props.style]\n  );\n\n  return (\n    <div ref={ref} className={props.className} style={cssStyle} data-test-id={props['data-test-id']}>\n      {ReactChildren.map(props.children, (child, index) => (\n        <Fragment key={index}>{child}</Fragment>\n      ))}\n    </div>\n  );\n});\n\nItem.displayName = 'Grid.Item';\n\nexport const Grid = {\n  Container,\n  Item,\n};\n"],"names":["Container","forwardRef","props","ref","errorMessage","useEffect","child","_b","_a","cssStyle","useMemo","jsx","item","index","Fragment","Item","Grid"],"mappings":"wOAeA,MAAMA,EAAYC,EAAA,WAA2C,CAACC,EAAOC,IAAQ,CAC3E,MAAMC,EAAe,2DAErBC,EAAAA,UAAU,IAAM,CACV,MAAM,QAAQH,EAAM,QAAQ,IAChBA,EAAM,SAAS,MAAOI,YAAe,QAAAC,GAAAC,EAAAF,GAAA,YAAAA,EAAO,OAAP,YAAAE,EAAa,SAAb,YAAAD,EAAqB,cAAe,YAAW,GACtF,QAAQ,KAAKH,CAAY,EACvC,EACC,CAACF,EAAM,QAAQ,CAAC,EAEnB,MAAMO,EAA0BC,EAAA,QAC9B,KAAO,CACL,QAAS,OACT,oBAAqB,UAAUR,EAAM,aACrC,iBAAkB,UAAUA,EAAM,aAClC,UAAWA,EAAM,SAAW,EAC5B,OAAQA,EAAM,SAAW,EACzB,GAAGA,EAAM,KAAA,GAEX,CAACA,EAAM,KAAMA,EAAM,QAASA,EAAM,KAAMA,EAAM,QAASA,EAAM,KAAK,CAAA,EAIlE,OAAAS,EAAA,IAAC,MAAI,CAAA,IAAAR,EAAU,MAAOM,EAAU,eAAcP,EAAM,cAAc,EAAG,UAAWA,EAAM,UACnF,oBAAc,IAAIA,EAAM,SAAU,CAACU,EAAMC,UACvCC,WAAsB,CAAA,SAAAF,CAAA,EAARC,CAAa,CAC7B,CACH,CAAA,CAEJ,CAAC,EAeKE,EAAOd,EAAA,WAAsC,CAACC,EAAOC,IAAQ,CACjE,MAAMM,EAA0BC,EAAA,QAC9B,KAAO,CACL,gBAAiBR,EAAM,SACvB,cAAeA,EAAM,OACrB,aAAcA,EAAM,SACpB,WAAYA,EAAM,OAClB,YAAaA,EAAM,YACnB,UAAWA,EAAM,UACjB,GAAGA,EAAM,KAAA,GAEX,CAACA,EAAM,SAAUA,EAAM,OAAQA,EAAM,SAAUA,EAAM,OAAQA,EAAM,KAAK,CAAA,EAIxE,OAAAS,EAAA,IAAC,MAAI,CAAA,IAAAR,EAAU,UAAWD,EAAM,UAAW,MAAOO,EAAU,eAAcP,EAAM,cAAc,EAC3F,oBAAc,IAAIA,EAAM,SAAU,CAACI,EAAOO,UACxCC,WAAsB,CAAA,SAAAR,CAAA,EAARO,CAAc,CAC9B,CACH,CAAA,CAEJ,CAAC,EAEDE,EAAK,YAAc,YAEZ,MAAMC,EAAO,CAClB,UAAAhB,EACA,KAAAe,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}